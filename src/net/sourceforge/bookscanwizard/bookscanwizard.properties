
AutoLevels.help = Changes the colors so top 1% of colors is considered white, and the darkest 1% of colors is considered black. \
                  It is better to choose the auto levels option from the right click menu in the viewer \
                  as this command will perform the autolevel on each page separately, which will make the pages inconsistent. \
                  The auto levels option from the viewer will calculate a levels command that can be applied to multiple images.
AutoLevels.example = 1, 99
AutoLevels.p1.type = optional
AutoLevels.p1.name = low_pct
AutoLevels.p1.text = The lower percentile of pixels that should be considered black.  Defaults to 1 (1%).
AutoLevels.p2.type = optional
AutoLevels.p2.name = high_pct
AutoLevels.p2.text = The upper percentile of pixels that should be considered white.  Defaults to 99 (99%).

BarcodePerspective.help = Uses a set of 4 QR codes to provide rotation and keystone correction.  \
                          For the registration image, use the menu option under "Tools."
BarcodePerspective.example = first
BarcodePerspective.p1.type = optional
BarcodePerspective.p1.name = model.
BarcodePerspective.p1.text = If this is set to "first", only the first pages of the  \
                             set will be searched for barcodes.  If this is set to \
                             "prescanned", then it will use the barcode data from \
                             the barcodes.csv file.
Barcodes.help = This will add configuration based on QR-coded information that was \
                scanned in with the book. To use this command, right the command, then \
                choose "Expand barcode operations".
Barcodes.example = 
Barcodes.p1.type = optional
Barcodes.p1.name = threshold
Barcodes.p1.text = The key word "threshold" followed by a number from 0-100.  If an \
                   image is very dark or very light it may be necessary to adjust this \
                   parameter.  However, the default value of 35 should work for \
                   most case.  To determine the correct value, try performing \
                   a "Color=bw 35" correction on the image.  If the image is too light,  \
                   replace 35 with a higher number.  If it is too dark, us a lower number.

BarrelCorrection.help =  This will correct for barrel distortion or pincushion distortion. you can specify corrections for r^3, r^2, and r^1
BarrelCorrection.example = .000000000005
BarrelCorrection.p1.type = required
BarrelCorrection.p1.name = amplitude3
BarrelCorrection.p1.text = Use a small positive number (like .0000001), or for pincushion distortion use a small negative value.
BarrelCorrection.p2.type = optional
BarrelCorrection.p2.name = amplitude2
BarrelCorrection.p2.text = Use a small positive number (like .0000001), or for pincushion distortion use a small negative value.
BarrelCorrection.p3.type = optional
BarrelCorrection.p3.name = amplitude1
BarrelCorrection.p3.text = Use a small positive number (like .0000001), or for pincushion distortion use a small negative value.
BarrelCorrection.p4.type = optional
BarrelCorrection.p4.name = center_x
BarrelCorrection.p4.text = The x coordinate of the focus of the correction.  If not defined it will use the center.
BarrelCorrection.p5.type = optional
BarrelCorrection.p5.name = center_y
BarrelCorrection.p5.text = The x coordinate of the focus of the correction. If not defined it will use the center.

Brightness.help = Increases the brightness of an image by the given percentage. \
                  If one number is given, it will increase all channels by that \
                  amount.  If three numbers are given, then it will do the change by channel.
Brightness.example = 10 10 10
Brightness.p1.type = required
Brightness.p1.name = master or red
Brightness.p1.text = A number from 0-100
Brightness.p1.type = optional
Brightness.p1.name = green
Brightness.p1.text = A number from 0-100
Brightness.p1.type = optional
Brightness.p1.name = blue
Brightness.p1.text = A number from 0-100

Color.help =  Converts an image to either binary (black & white), or gray scale. \
              For b/w if not otherwise specified it will use the midpoint between \
              the lowest 1% of colors and upper 1% of colors.
Color.example = bw 50
Color.p1.type = required
Color.p1.name = color_type
Color.p1.text = bw or gray (grey)
Color.p2.type = optional
Color.p2.name = threshold
Color.p2.text = For b/w, the threshold (from 0-100).

Crop.help =  Crops a picture.
Crop.example = 10,100, 1400,1401
Crop.p1.type = required
Crop.p1.name = NW Corner
Crop.p1.text = The upper left corner.
Crop.p2.type = required
Crop.p2.name = SW Corner
Crop.p2.text = The lower right corner.

CropAndScale.help =  Crops an image, then scales it.  This is primarily used to by the \
             viewer right click method which will take a previously defined crop \
             and scales it to match the previous crop.
CropAndScale.example = 10,100, 1400,1401, 0.9113
CropAndScale.p1.type = required
CropAndScale.p1.name = NW Corner
CropAndScale.p1.text = The upper left corner.
CropAndScale.p2.type = required
CropAndScale.p2.name = SW Corner
CropAndScale.p2.text = The lower right corner.
CropAndScale.p3.xScale = The x scaling factor
CropAndScale.p4.yScale = The y scaling factor

CreateArchiveZip.help = Creates a zip file for uploading to archive.org.  Normally \
                        This is created by using the Tools, Prepare for Uploading \
                        menu item.
CreateArchiveZip.example = archive.zip
CreateArchiveZip.p1.type = required
CreateArchiveZip.p1.name = fileName
CreateArchiveZip.p1.text = The filename of the archive.org zip file to create.
CreatePDF.help = Creates a multi-page pdf.
CreatePDF.p1.type = required
CreatePDF.p1.name = Filename
CreatePDF.p1.text = The name of the PDF file to create.
CreatePDF.p2.type = optional
CreatePDF.p2.name = format
CreatePDF.p2.type = jpeg or jp2. If this is not defined, it will use jp2.
CreatePDF.p3.type = optional
CreatePDF.p3.name = quality
CreatePDF.p3.text = The quality of the image.  This is a number between 0 and 1. \
                    The default quality for jpeg is 0.8.  The default quality for \
                    jp2 is .1, which will compress about 1/10 the uncompressed size. \
                    Compression can also be given in the format of 1:4, which \
                    is the same as .25.
EstimateDPI.help = Estimates the source DPI of the image based on the zoom level. \
                   To use this take two reference shots at different zoom levels, \
                   and add the source DPI for both images (setting them automatically \
                   using the DPI barcode is helpful for this).  Finally Run \
                   Tools, Save DPI information.  Then in the future, this command \
                   can be inserted by choosing Tools, Load DPI information, or by \
                   right clicking in the editor, and choosing EstimateDPI.
EstimateDPI.example = 5.8,135, 23.2,482
EstimateDPI.p1.type = required
EstimateDPI.p1.name = focal length 1
EstimateDPI.p1.text = A reference focal length
EstimateDPI.p2.type = required
EstimateDPI.p2.name = DPI
EstimateDPI.p2.text = The DPI of the first reference focal point.
EstimateDPI.p3.type = required
EstimateDPI.p3.name = focal length 2
EstimateDPI.p3.text = A reference focal length
EstimateDPI.p4.type = required
EstimateDPI.p4.name = DPI
EstimateDPI.p4.text = The DPI of second first reference focal point.

Gamma.help = Adjusts the gamma of an image.  This is the best way to lighten or \
             darken an image without washing out or clipping the image.  If three \
             values are given, it will apply separate values for red, green and blue. \
             The value defines the percentage which indicates the midpoint of the color.
Gamma.example = 40
Gamma.p1.type = required
Gamma.p1.name = master or red
Gamma.p1.text = The gamma % between 0 and 100.
Gamma.p2.type = optional
Gamma.p2.name = green
Gamma.p2.text = The gamma for green
Gamma.p3.type = optional
Gamma.p3.name = blue
Gamma.p3.text = The gamma for blue

ImageStatistics.help = Prints some statistics about an image to standard out (experimental)

InterpolateCrop.help = Sets a crop that gradually changes over a range of pages from one crop to another.
InterpolateCrop.example = a0001 2946, 570, 3915, 1316, a0007  2997, 2109, 3750, 2653
InterpolateCrop.p1.type = required
InterpolateCrop.p1.name = first_Page
InterpolateCrop.p1.text = The page name of the first crop
InterpolateCrop.p2.type = required
InterpolateCrop.p2.name = NW Corner
InterpolateCrop.p2.text = The upper left corner.
InterpolateCrop.p3.type = required
InterpolateCrop.p3.name = SW Corner
InterpolateCrop.p3.text = The lower right corner.
InterpolateCrop.p4.type = required
InterpolateCrop.p4.name = last_page
InterpolateCrop.p4.text = The page name of the ending crop
InterpolateCrop.p5.type = required
InterpolateCrop.p5.name = NW Corner
InterpolateCrop.p5.text = The upper left corner.
InterpolateCrop.p6.type = required
InterpolateCrop.p6.name = SW Corner
InterpolateCrop.p6.text = The lower right corner.

Levels.help = Sets the black and white points of the document.  If three sets are \
              defined it will use separate levels for red, green, and blue.
Levels.example = 10, 90
Levels.p1.type = required
Levels.p1.name = black
Levels.p1.text = A value from 0-100 specifying the level.
Levels.p2.type = required
Levels.p2.name = white
Levels.p2.text = A value from 0-100 specifying the level.

LoadImages.help = Loads images from a directory.
LoadImages.example = source
LoadImages.p1.type = required
LoadImages.p1.name = folder
LoadImages.p1.text = A path to a folder which should the images to load

LoadLRImages.help = Load camera images from separate left and right folders.  Unless the ignore_times parameter is specified, it \
                    will compare the timestamps of the last images from each directory to figure out the offset, then use the \
                    timestamps to match the left and right images.  If an image doesn't have a matching one it will be flagged and put \
                    at the end of the list.  If the directory given doesn't have an l & r directory underneath it, both the left \
                    and the right sides will use the same image.  (That would be appropriate if both pages were imaged with one camera).
LoadLRImages.example = source
LoadLRImages.p1.type = optional
LoadLRImages.p1.name = ignore_times
LoadLRImages.p1.text = if the ignore_times parameter is used, then the Left/Right matching simply alternate left and right images.
LoadLRImages.p2.type = required
LoadLRImages.p2.name = folder
LoadLRImages.p2.text = A path to a folder which should contain "l" and "r" subfolders.

Metadata.help = Defines metadata for this book for uploading to the Internet archive.
Metadata.example = creator: Author
Metadata.p1.type = required
Metadata.p1.name = line
Metadata.p1.text = The metadata for archive.org.  Normally this is defined by using \
                   the menu Tools, Prepare for Uploading...

NormalizeLighting.help = This adjusts the brightness of an image so that the brightness is even \
                         across the image.  To use this command, choose a blank page in the viewer.  Ideally, a gray card would \
                         be the best, but any blank page can be used.  Then right click the image and choose Normalize Lighting. \
                         This will save a small image of the page which will be used to adjust the other pages.
NormalizeLighting.type = optional
NormalizeLighting.name = gray_level
NormalizeLighting.text = A number betwen 0 and 100 that defines the level that is considered to be mid gray.  If a gray card is used \
                         this isn't normally needed, but can be used to set the brightness of the corrected image.

Pages.help = A list of pages that the following commands should be run as.  You can specify page names or page ranges separated by commas and hyphens.
Pages.example = left IMG_0010-IMG0014,IMG_0020,IMG_0024
Pages.p1.type = optional
Pages.p1.name = pages
Pages.p1.text = all, left, or right.
Pages.p2.type = optional
Pages.p2.name = page list
Pages.p2.text = a comma separated list of pages or page ranges.

Perspective.help = This corrects the perspective of an image.  It also optionally allows \
                   specifying the height and with of the selection, which will \
                   be used to calculate the source DPI, and adjust the ratio between \
                   the height and the width.  Normally this command is created automatically \
                   by the option in the viewer.
Perspective.example =  513,-162, 2504,-213, 2508,2541, 607,2582
Perspective.p1.type = required
Perspective.p1.name = NW
Perspective.p1.text = The upper left corner.
Perspective.p2.type = required
Perspective.p2.name = NE
Perspective.p2.text = The upper right corner.
Perspective.p3.type = required
Perspective.p3.name = SE
Perspective.p3.text = The lower left corner.
Perspective.p4.type = required
Perspective.p4.name = SW
Perspective.p4.text = The lower left corner.
Perspective.p5.type = optional
Perspective.p5.name = width (in.)
Perspective.p5.text = The width in inches of the perspective area.
Perspective.p6.type = optional
Perspective.p6.name = height (in.)
Perspective.p6.text = The height in inches of the perspective area.

PerspectiveAndCrop.help = This corrects the perspective of an image, and then \
                          crops the image to given coordinates.
PerspectiveAndCrop.example =  513,-162, 2504,-213, 2508,2541, 607,2582
PerspectiveAndCrop.p1.type = required
PerspectiveAndCrop.p1.name = NW
PerspectiveAndCrop.p1.text = The upper left corner.
PerspectiveAndCrop.p2.type = required
PerspectiveAndCrop.p2.name = NE
PerspectiveAndCrop.p2.text = The upper right corner.
PerspectiveAndCrop.p3.type = required
PerspectiveAndCrop.p3.name = SE
PerspectiveAndCrop.p3.text = The lower left corner.
PerspectiveAndCrop.p4.type = required
PerspectiveAndCrop.p4.name = SW
PerspectiveAndCrop.p4.text = The lower left corner.
PerspectiveAndCrop.p5.type = optional
PerspectiveAndCrop.p5.name = width (in.)
PerspectiveAndCrop.p5.text = The width in inches of the perspective area.
PerspectiveAndCrop.p6.type = optional
PerspectiveAndCrop.p6.name = height (in.)
PerspectiveAndCrop.p6.text = The height in inches of the perspective area.

PipePNG.help = This is used to call an external command. The command should read \
               the image in from stdin as a png file, and write the new image to \
               stdout.  The example will call the ImageMagick negate function.
PipePNG.example = convert png:- -negate png:-
PipePNG.p1.type = required
PipePNG.p1.name = command
PipePNG.p1.text = the command to execute. Commands with embedded spaces should be quoted with double quotes.

PostCommand.help = Runs a script after creating the tiff images. See the parameter list for the variables \
                   that can be included in the script.

PostCommand.example = bsw.ahk %destDir% %parentAsName%
PostCommand.p1.type = optional
PostCommand.p1.name = %destDir%
PostCommand.p1.text = The directory where the processed tiff files are stored.
PostCommand.p2.type = optional
PostCommand.p2.name = %sourceDir%
PostCommand.p2.text = The source directory.
PostCommand.p3.type = optional
PostCommand.p3.name = %parentAsName%
PostCommand.p3.text = The filename of the parent directory, saved in the current directory.

RemovePages.help = Specifies a list of pages that will have their processing skipped. \
                     This command will work on the full set of pages, and ignores the Pages command.
RemovePages.example = even BSW_0010-BSW0014,BSW_0020,BSW_0024
RemovePages.p1.type = required
RemovePages.p1.name = pages
RemovePages.p1.text = all, even, or odd.
RemovePages.p2.type = optional
RemovePages.p2.name = page list
RemovePages.p2.text = a comma separated list of pages or page ranges.

Rename.help = Renames pages. The Arguments can be repeated as many of times as necessary. \
              Numbers can be given in Roman numerals.  If Roman numerals are used, the Arabic number \
              is also included for sorting purposes.  Any pages that are deleted at the point of the script \
              are skipped, so if they should be included, run this command before deleting pages.  \
              The example below will use page numbers in Roman numerals from i - xxiv, then Arabic (normal) numbers \
              from 1 onwards.  Arguments 2 and 3 are only optional for the last sequences.\
              You probably want to keep the pages correctly sorted, so a handy convention \
              is to name the first sequence A, then B, etc.
Rename.example = a## i xxiv b### 1
Rename.p1.type= required
Rename.p1.name= pattern
Rename.p1.text= The page number will consist of the name, with leading zeros filling out the hash marks.
Rename.p2.type= optional
Rename.p2.name= starting
Rename.p2.text= The starting page number of the sequence
Rename.p3.type= optional
Rename.p3.name= ending
Rename.p3.text= The ending page number of the sequence

Rotate.help = This rotates an image, using either degrees or two points.
Rotate.example =  908,47, 2116,84
Rotate.p1.type = required
Rotate.p1.name = Degrees or the first point.
Rotate.p1.text = If there is only one point, angle in degrees that the image should be changed.
Rotate.p2.type = optional
Rotate.p2.name = Second point
Rotate.p2.text = The second point which will rotate the picture left to right from the previous point to this one.

Saturation.help = Changes the color saturation.
Saturation.example = -25
Saturation.p1.type = required
Saturation.p1.name = saturation
Saturation.p1.text = This is a percentage of the original value.  Numbers above 100 increases the saturation, \
                     while numbers less that one decreases it.

SaveImage.help = Defines a save operation.  This is defined at the end of a job to indicate what output format \
                 should be used.  If this command is not used, it will output tiff files. If no save operation is \
                 needed, use NONE for the type parameter.
SaveImage.p1.type = required
SaveImage.p1.name = type
SaveImage.p1.text = The image type to save.  tiff, jpeg, jpeg2000, and png are supported.
SaveImage.p2.type = optional
SaveImage.p2.name = compression
SaveImage.p2.text = The compression of the image.  For Tiff files, the options are NONE,DEFLATE or GROUP4, JPEG. \
                    For jpeg images it is the quality between 0 and 1.  For jpeg2000, it is the approximate \
                    image reduction.  For example, 10 will create an image 1/10 the size of the uncompressed version. \
                    Using a value of 1 will create a lossless jp2 file.

SaveToArchive.help = Saves a zip file to the internet archive as a post-process task.  It is also possible \
                     to run this on the command line by using the -upload command, or by choosing the menu item
                     Tools, upload to the Archive...  The zip file is created \
                     by running the CreateArchiveZip operation which can be created by using the Tools, Upload\
                     menu item.
SaveToArchive.p1.type = required
SaveToArchive.p1.name = accessKey
SaveToArchive.p1.text = Access key for your account to archive.org.  See http://www.archive.org/account/s3.php
SaveToArchive.p1.type = required
SaveToArchive.p2.name = secretKey
SaveToArchive.p2.text = The secret key for your account to archive.org.

Scale.help = Changes the resolution of an image.  Normally this is not needed because setting the DPI will \
            implicitly perform this scaling. If a single number is listed it will scale both x & y by the \
            same amount.  If two number are given, it will scale each axis separately.
Scale.example = 2
Scale.p1.type = required
Scale.p1.name = scale
Scale.p1.text = The multiplier.  For example a scale of 2 will change a 150 DPI image into a 300 DPI image.
Scale.p2.type = optional
Scale.p2.name = y scale
Scale.p2.text = the multiplier for the y axis.

ScaleToFirst.help = This scales all images to the size of the first image.  It can be used \
                    to correct for differences between the dpi or crop areas for the left & right sides.
ScaleToFirst.example =

ScaleToDPI.help = Changes the scale of an image by DestinationDPI / SourceDPI. \
                  The sourceDPI should be previously set by either SetSourceDPI, \
                  EstimateDPI, or the optional parameters in Perspective.
ScaleToDPI.example = 300
ScaleToDPI.p1.type = optional
ScaleToDPI.p1.name = DPI
SCaleToDPI.p1.text = The DPI that the images should be scaled to.  If this is not defined \
                     then it will use the setting from SetTiffOptions.

SetDestination.help =  Sets the file destination.
SetDestination.example = tiff
SetDestination.p1.type = required
SetDestination.p1.name = folder
SetDestination.p1.text = The folder that the final images should be stored.

SetPreviewScale.help = Sets the scale of the preview images to be loaded, to improve preview speed. <b>  This isn't working quite right so you should leave the default should be avoided for now</b>
SetPreviewScale.example = .25
SetPreviewScale.p1.type = required
SetPreviewScale.p1.name = scale
SetPreviewScale.p1.text = A number > 0 and <= 1

SetSourceDPI.help = Sets the source DPI to a particular value.  To automatically set the DPI, see EstimateDPI or use the DPI or perspective barcodes.
SetSourceDPI.example = 300
SetSourceDPI.p1.type = required
SetSourceDPI.p1.name = DPI
SetSourceDPI.p1.text = The source DPI.

SetTiffOptions.help = Sets the final DPI and compression.
SetTiffOptions.example = 300 NONE
SetTiffOptions.p1.type = required
SetTiffOptions.p1.name = DPI
SetTiffOptions.p1.text = Dots per inch of the final image.
SetTiffOptions.p2.type = optional
SetTiffOptions.p2.name = Should be one of the following: NONE,DEFLATE or GROUP4, JPEG. \
                         NONE is the default.  Note GROUP4 only is valid for black & white (binary) images.

Sharpen.help = Sharpens the image using the "desharp" algorithm.  The default will moderately \
               increase the sharpness. For a good description of the optional parameters, see \
               http://redskiesatnight.com/2005/04/06/sharpening-using-image-magick which uses the same \
               algorithm.
Sharpen.example =
Sharpen.p1.type = optional
Sharpen.p1.name = amplitude
Sharpen.p1.text = The amount of sharpness.  The default is 1.
Sharpen.p2.type = optional
Sharpen.p2.name = radius
Sharpen.p2.text = The radius of the circle that the sharpness should be applied over.  The default is 2.
Sharpen.p3.type = optional
Sharpen.p3.name = sigma
Sharpen.p3.text = The standard deviation of the Gaussian curve.  This should \
                  be no greater than the radius.
StartPage.help = This modifies the last 'Page' operation so that the following operations \
                 will only be run starting at the listed file, and ending at \
                 the file before the next StartPage operation.
StartPage.p1 = required
StartPage.name = page
StartPage.text = The starting page to continue processing.
Whiteout.help = Replaces an area with white. If two coordinates are given \
                it is treated as a rectangle.  Otherwise the coordinates are \
                coordinates of the polygon.
Whiteout.example = 608,872, 980,1237
Whiteout.p1.type = required
Whiteout.p1.name = coord1
rWhiteout.p1.text = The first xy vertex of the polygon
Whiteout.p1.type = required
Whiteout.p1.name = coord2
Whiteout.p1.text = the 2nd vertex if there are more arguments, otherwise, it \
                  it is the second bounds of a rectangle.
Whiteout.p1.type = required
Whiteout.p1.name = coord3,4...
Whiteout.p1.text = additional vertices.
